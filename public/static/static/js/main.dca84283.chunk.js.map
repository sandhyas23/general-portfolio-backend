{"version":3,"sources":["images/default.jpg","components/Work.js","components/SocialMedia.js","components/MenuItems.js","components/FooterDisplay.js","components/Banner.js","components/Home.js","components/Blog.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","flexContainer","padding","toolbarTitle","link","margin","appBar","flexWrap","formControl","minWidth","Work","props","classes","useState","categories","setCategories","allProjects","setAllProjects","activeLink","setActiveLink","open","setOpen","categoryOption","setCategoryOption","categoryName","setCategoryName","newCategoryName","setNewCategoryName","message","setMessage","openProjectDialog","setOpenProjectDialog","projectOption","setProjectOption","title","url","description","category","_id","projectObject","setProjectObject","imageFile","setImageFile","a","fetch","method","headers","response","json","jsonData","fetchProjectsData","console","log","work","useEffect","fetchCategoriesData","fetchSpecificProjectsData","currentCategoryName","projects","handleCategoryLink","handleOpen","categoryOrProject","option","project","categoryArray","forEach","element","index","array","cat","find","item","undefined","push","name","handleClose","handleChange","event","target","value","handleChangeProjectDetails","uploadImage","projectId","formData","FormData","append","body","then","data","success","handleDefaultImage","alert","booleanString","JSON","stringify","image","indexToChange","findIndex","Container","className","maxWidth","AppBar","position","color","Link","variant","onClick","map","key","menu","isAdmin","Button","aria-haspopup","Dialog","onClose","aria-labelledby","DialogTitle","id","FormLabel","RadioGroup","aria-label","onChange","row","FormControlLabel","control","Radio","label","charAt","toUpperCase","slice","fullWidth","e","autoFocus","user","disabled","length","InputLabel","htmlFor","Select","native","newCategory","deletedCategory","splice","Typography","align","gutterBottom","DialogContent","DialogContentText","DialogActions","deletedProject","noValidate","autoComplete","rows","rowsMax","multiline","labelId","multiple","renderValue","selected","join","input","Input","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","style","type","accept","files","addOrEdit","Grid","container","xs","sm","md","Card","CardMedia","require","CardContent","component","CardActions","size","library","add","fab","form","width","marginTop","marginLeft","SocialMedia","socialMedia","setSocialMedia","anchorEl","setAnchorEl","state","setState","editLink","setEditLink","fetchData","iconName","iconToChangeIndex","toString","handleLink","handleCancel","List","ListItem","href","icon","toLowerCase","currentTarget","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","inputProps","currentSocialMedia","handleSaveLink","handleEditClick","ul","listStyle","borderBottom","breakpoints","down","smallAppBar","toolbar","heroContent","cardHeader","backgroundColor","palette","grey","cardPricing","justifyContent","alignItems","marginBottom","MenuItems","setMenu","setUser","parse","User","handleUser","menuName","menuToChangeIndex","elevation","Toolbar","GridList","data-testid","handleNavItemClick","Menu","keepMounted","Switch","float","Avatar","alt","src","Copyright","Date","getFullYear","footer","borderTop","up","popover","zIndex","top","right","bottom","FooterDisplay","setFooter","editValue","setEditValue","viewColor","setViewColor","bgColor","setBgColor","baseColor","setBaseColor","textColor","setTextColor","fetchFooterData","fetchColorData","footerName","footerToChangeIndex","handleText","justify","aria-controls","anchorReference","anchorPosition","left","footerDetails","handleSave","handleEditValue","sketch","onChangeComplete","hex","Box","mt","fontSize","large","getContrastText","deepPurple","noAdminBanner","text","Banner","tagLine","setTagLine","baseState","setBaseState","viewTextArea","setViewTextArea","viewUploadedImage","setViewUploadedImage","paragraph","split","root","minHeight","main","fontWeight","Home","aboutMe","setAboutMe","comment","border","borderRadius","overflow","overflowX","overflowY","Blog","blogs","setBlogs","blogOption","setBlogOption","topic","content","comments","likes","blogObject","setBlogObject","viewBlog","setViewBlog","setComment","blog","fetchBlogs","blogDetails","blogId","viewArticle","handleLike","googleId","profileId","newBlog","deletedLikes","cc","filter","source","variantMapping","body2","IconButton","includes","list","ListItemAvatar","date","toLocaleString","window","confirm","column","displayName","deletedBlog","reader","FileReader","file","onloadend","result","readAsText","CardHeader","subheader","updatedAt","toLocaleDateString","action","paper","avatar","secondary","submit","Contact","fromEmail","website","confirmation","setConfirmation","aria-describedby","required","error","App","setTitle","setAdmin","useCallback","boolean","CssBaseline","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dca84283.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.17d95c21.jpg\";","// The Work component - Pst all works with thumbnail,title,description\nimport React ,{useState,useEffect} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Radio from '@material-ui/core/Radio';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Input from \"@material-ui/core/Input\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport PropTypes from \"prop-types\";\nimport MenuItems from \"./MenuItems\";\n\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n        height:200\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    flexContainer : {\n        display: 'flex',\n        flexDirection: 'row',\n        padding:0\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    appBar:{\n        margin: theme.spacing(0,0,3,0),\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 120,\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        }\n    },\n}));\n\n// Component Work\nconst Work =(props) =>{\n    const classes = useStyles();\n\n    //STATES\n    const [categories ,setCategories] = useState([]);\n    const [allProjects, setAllProjects] = useState([]);\n    const [activeLink,setActiveLink] = useState(\"all\");\n    //Catgeory add,edit,delete\n    const [open, setOpen] = useState(false);\n    const [categoryOption,setCategoryOption] = useState(\"add\");\n    const [categoryName, setCategoryName] = useState(\"\");\n    const [newCategoryName, setNewCategoryName] = useState(\"\");\n    const [message,setMessage] = useState(\"\");\n    //project add,edit,delete\n    const [openProjectDialog, setOpenProjectDialog] = useState(false);\n    const [projectOption,setProjectOption] = useState(\"add\");\n    const [projectObject,setProjectObject] = useState({title:\"\",url:\"\",description:\"\",category:[],_id:null});\n\n    //image\n    const [imageFile,setImageFile] = useState(null);\n\n\n    //FUNCTIONS\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchCategoriesData();\n        fetchProjectsData();\n\n    },[]);\n\n    // fetch all work items from backend initially when component is mounted\n    async function fetchCategoriesData() {\n        const response = await fetch('/work/categories',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        const jsonData =  await response.json();\n        //console.log(\"data got in categior\",jsonData);\n        //categories\n        setCategories(jsonData.categories);\n    }\n    // get all work details\n    async function fetchProjectsData() {\n        const response = await fetch('/work/projects',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        const jsonData =  await response.json();\n        console.log(\"data got in project\",jsonData);\n        //projects\n        setAllProjects(jsonData.work);\n    }\n\n    // get specific works for a category\n    const fetchSpecificProjectsData =async (currentCategoryName)=> {\n        const response = await fetch('/work/projects/'+currentCategoryName,{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        const jsonData =  await response.json();\n        //console.log(\"data got for specific cat\",jsonData);\n        //categories\n        setAllProjects(jsonData.work.projects);\n\n    }\n\n    // function to display all work when a category is clicked\n    const handleCategoryLink =async (currentCategoryName) => {\n        //console.log(\"currentCategoryName\",currentCategoryName);\n        if (currentCategoryName === \"all\") {\n            fetchProjectsData();\n            setActiveLink(\"all\");\n        } else {\n            fetchSpecificProjectsData(currentCategoryName);\n            setActiveLink(currentCategoryName);\n        }\n    };\n\n    // function to open the dialog to add/delete/edit category or project\n    const handleOpen = (categoryOrProject,option,project) => {\n        if(categoryOrProject === \"category\"){\n            setOpen(true);\n        }\n        else if(categoryOrProject === \"project\"){\n            if(option === \"add\") setProjectOption(\"add\") ;\n\n            else if (option === \"edit\"){\n                setProjectOption(\"edit\");\n                console.log(\"rpoekect details:\",project);\n                const categoryArray =[];\n                project.category.forEach((element,index,array)=>{\n                   const cat = categories.find((item) => element === item[\"_id\"]);\n                   if(cat !== undefined) categoryArray.push(cat.name)\n                });\n                setProjectObject({title:project.title,url:project.url,description:project.description,\n                    category:categoryArray,_id:project[\"_id\"]})\n            }\n\n            else if(option === \"delete\"){\n                setProjectOption(\"delete\");\n                setProjectObject({_id:project[\"_id\"]})\n            }\n            setOpenProjectDialog(true);\n        }\n\n    };\n\n    // function to close the dialog to add/delete/edit category or project\n    const handleClose = (categoryOrProject) => {\n        if(categoryOrProject === \"category\"){\n            setCategoryOption(\"add\");\n            setNewCategoryName(\"\");\n            setCategoryName(\"\");\n            setOpen(false);\n        }\n        else if(categoryOrProject === \"project\"){\n            setOpenProjectDialog(false);\n            setProjectObject({title:\"\",url:\"\",description:\"\",category:[]});\n            setImageFile(null);\n            if(projectOption === \"edit\" || projectOption === \"delete\") handleCategoryLink(activeLink);\n\n        }\n        setMessage (\"\");\n\n\n    };\n\n    // START OF FUNCTIONS FOR ADD/EDIT/DELETE CATEGORIES\n    //function to set state when a category is selected for edit and delete category\n    const handleCategoryOption = (event) => {\n        setCategoryOption((event.target.value));\n        setNewCategoryName(\"\");\n        setCategoryName(\"\");\n        setMessage (\"\");\n    };\n    //function to set state category name\n    const handleChange = (option,event) =>{\n        if(option === \"edit\"){\n            setNewCategoryName(event.target.value);\n        }\n        else{\n            setCategoryName(event.target.value);\n        }\n\n    };\n    // function to add a category\n    const handleAdd = () =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/work/categories',  {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({category:categoryName})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    if(data.success){\n                        categories.push(data.category);\n                        //setCategories(categories);\n                    }\n                    setMessage(data.message);\n                    setNewCategoryName(\"\");\n                    setCategoryName(\"\");\n\n                });\n            })\n        }\n\n    };\n    //function to edit category\n    const handleEdit = () =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/work/categories/'+categoryName,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({newCategory:newCategoryName})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    if(data.success){\n                        //console.log(\"category edites:\",data.work);\n                        const indexToChange = categories.findIndex((element,index,array)=>{\n                            return element.name === categoryName\n                        });\n                        categories[indexToChange].name = data.work.name;\n                        //setCategories(categories);\n                    }\n                    setMessage(data.message);\n                    setNewCategoryName(\"\");\n                    setCategoryName(\"\");\n\n                });\n            })\n        }\n    };\n    //function to delete a category\n    const handleDelete = () =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/work/category'+categoryName,  {\n                method: 'DELETE',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({category:categoryName})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    if(data.success){\n                        //console.log(\"category edites:\",data.work);\n                        const indexToChange = categories.findIndex((element,index,array)=>{\n                            return element.name === data.deletedCategory.name\n                        });\n                        categories.splice(indexToChange,1);\n                        //setCategories(categories);\n                    }\n                    setMessage(data.message);\n                    setNewCategoryName(\"\");\n                    setCategoryName(\"\");\n\n                });\n            })\n        }\n\n    };\n    // END OF FUNCTIONS FOR ADD/EDIT/DELETE CATEGORIES\n\n\n    // START OF FUNCTIONS FOR ADD/EDIT/DELETE PROJECT WORKS\n    // function set state for project object with details of selected project work\n    const handleChangeProjectDetails = (event) => {\n        console.log(\"event change in project add\",event.target.name,event.target.value);\n        setProjectObject({ ...projectObject,[event.target.name]:event.target.value});\n    };\n\n    // function to add or edit a project work\n    const handleAddProject =(addOrEdit) =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            //call to add a new project work\n            if(addOrEdit === \"add\"){\n                fetch('/work/addProject',  {\n                    method: 'POST',\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({category:projectObject.category,title:projectObject.title,\n                        url:projectObject.url,description:projectObject.description})\n                }).then( (response)=> {\n                    response.json().then((data) => {\n                        //console.log(data);\n                        if(data.success){\n                            //console.log(\"imageFile:\",imageFile);\n                            if(imageFile !== null){\n                                //console.log(\"jffjhfjdhfjdhfdj\");\n                                uploadImage(data.project[\"_id\"])\n                            }\n                            allProjects.push(data.project);\n                            //setCategories(categories);\n                        }\n                        setMessage(data.message);\n                        setProjectObject({title:\"\",url:\"\",description:\"\",category:[]})\n\n                    });\n                })\n            }\n            //call to edit a new project work\n            else if(addOrEdit === \"edit\"){\n                fetch('/work/editProject/'+projectObject[\"_id\"],  {\n                    method: 'PUT',\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({category:projectObject.category,title:projectObject.title,\n                        url:projectObject.url,description:projectObject.description})\n                })\n                    .then( (response)=> {\n                        response.json().then((data) => {\n                            if(data.success){\n                                console.log(\"in put: \",data);\n                                if(imageFile !== null){uploadImage(projectObject[\"_id\"]);}\n                                const indexToChange = allProjects.findIndex((element,index,array)=>{\n                                    return element[\"_id\"] === projectObject[\"_id\"];\n                                });\n                                allProjects[indexToChange] = data.project;\n                            }\n                            setMessage(data.message);\n                            setProjectObject({title:\"\",url:\"\",description:\"\",category:[]});\n\n                        });\n                    })\n            }\n        }\n    };\n\n    // function to delete a new project work\n    const handleDeleteProject =() =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/work/deleteProject/'+projectObject[\"_id\"],  {\n                method: 'DELETE',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    if(data.success){\n                        //console.log(\"category edites:\",data.work);\n                        const indexToChange = allProjects.findIndex((element,index,array)=>{\n                            return element[\"_id\"] === data.deletedProject[\"_id\"]\n                        });\n                        allProjects.splice(indexToChange,1);\n                        //setCategories(categories);\n                    }\n                });\n                handleClose(\"project\")\n            })\n        }\n\n    };\n    // END OF FUNCTIONS FOR ADD/EDIT/DELETE PROJECT WORKS\n\n    // Image functions\n    const handleImageUpload =(event)=>{\n        setImageFile(event.target.files[0]);\n\n    };\n\n    const uploadImage =(projectId) =>{\n        const formData = new FormData();\n        formData.append('workImage', imageFile);\n        fetch(`/work/upload/`+projectId,{\n            method: 'POST',\n            // headers:{\n            //     'Content-type': 'multipart/form-data'\n            // },\n            body: formData\n        }).then( response => response.json()).then(data => {\n            if(!data.success){\n                alert(data.message);\n            }\n            else{\n               handleDefaultImage(projectId,\"true\")\n            }\n        });\n    };\n\n    const handleDefaultImage =(projectId,booleanString)=>{\n        fetch('/work/image/'+projectId,  {\n            method: 'PUT',\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({image:booleanString})\n        }).then( (response)=> {\n            response.json().then((data) => {\n                //console.log(\"handle image:\"+data);\n                const indexToChange = allProjects.findIndex((item,index,array)=>{\n                    return item[\"_id\"] === projectId\n                })\n                allProjects[indexToChange].image = data.image;\n                if(booleanString === \"false\"){\n                    setMessage(\"Image changed to default pic\");\n                }\n\n            });\n        })\n    };\n\n\n\n    //Render the component\n    return(\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n\n            {/*START OF CATEGORIES DISPLAY AND FUNCTIONALITY*/}\n            {/*Display categories*/}\n            <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n                    <nav>\n                        <Link variant=\"button\" color={activeLink ===\"all\" ? \"secondary\" :\"primary\"}\n                              onClick={()=>handleCategoryLink(\"all\")} className={classes.link}>\n                            all\n                        </Link>\n                        {categories.map((element,index,array)=>{\n                            return <Link key={`category${element.name}`} variant=\"button\" name={element.menu}\n                                         color={activeLink ===element.name ? \"secondary\" :\"primary\"}\n                                         onClick={()=>handleCategoryLink(element.name)}\n                                         className={classes.link}>\n                                {element.name}\n                                </Link>\n                        })}\n\n                        {/*ADMIN FUNCTIONALITY TO DISPLAY ADD,EDIT OR DELETE CATEGORY DIALOG*/}\n                        {props.isAdmin ?\n                            <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\" className={classes.link}\n                                    onClick={() => handleOpen(\"category\")}>\n                                change category details here!\n                            </Button>\n                            :\n                            null\n                        }\n\n                    </nav>\n\n                {/*ADMIN FUNCTIONALITY TO ADD A NEW PROJECT*/}\n                {props.isAdmin ?\n                    <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\" className={classes.link}\n                            onClick={() => handleOpen(\"project\",\"add\")}>\n                        add new project\n                    </Button>\n                    :\n                    null\n                }\n\n                {/*Dialog for Add ,Edit, Delete Category */}\n                <Dialog onClose={()=> handleClose(\"category\")} aria-labelledby=\"simple-dialog-title\" open={open}>\n                    <DialogTitle id=\"simple-dialog-title\">Change Category details</DialogTitle>\n                    <FormLabel className={classes.formControl}>Choose an option</FormLabel>\n                    {/* eslint-disable-next-line react/jsx-no-undef */}\n                    <RadioGroup\n                        name=\"category option\"\n                        aria-label=\"category option\"\n                        value={categoryOption}\n                        onChange={handleCategoryOption}\n                        className={classes.formControl}\n                        row\n                    >\n                        {[\"add\",\"edit\",\"delete\"].map((value) => (\n                            <FormControlLabel\n                                key={value}\n                                value={value}\n                                control={<Radio />}\n                                label={value.charAt(0).toUpperCase()+value.slice(1)}\n                            />\n                        ))}\n                    </RadioGroup>\n                    {/*Toggle display based option \"add\" or \"edit/delete\" is selected*/}\n                    {categoryOption === \"add\" ?\n                        <div className={classes.formControl}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id=\"category\"\n                                label=\"Category\"\n                                name=\"categoryName\"\n                                value={categoryName}\n                                onChange={(e)=>handleChange(\"add\",e)}\n                                autoFocus\n                            />\n                            <Button color=\"primary\" variant=\"outlined\" onClick={handleAdd} disabled={categoryName.length<1}>\n                                add\n                            </Button>\n                        </div>\n\n                        :\n                        <div className={classes.formControl}>\n                            <InputLabel htmlFor=\"category-native-simple\">Category</InputLabel>\n                                <Select\n                                    native\n                                    value={categoryName}\n                                    onChange={(e)=>handleChange(\"add\",e)}\n                                >\n                                    {categories.map((element,index,array)=>{\n                                        return <option key={`cat${element.name}${index}`}\n                                            value={element.name}>{element.name}</option>\n                                    })}\n                                </Select>\n                        {/*display text field and edit button if option \"edit\" is selected or\n                        delete button if \"delete is selected. The dropdown remains for both*/}\n                            {categoryOption === \"edit\"\n                                ?\n                                <div>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"category\"\n                                        label=\"New category name\"\n                                        name=\"newCategoryName\"\n                                        value={newCategoryName}\n                                        onChange={(e)=>handleChange(\"edit\",e)}\n                                        autoFocus\n                                    />\n                                    <Button color=\"primary\" variant=\"outlined\" className={classes.link}\n                                            onClick={handleEdit} disabled={newCategoryName.length<1}>\n                                        edit\n                                    </Button>\n                                </div>\n                                :\n\n                                <Button color=\"primary\" variant=\"outlined\" className={classes.link}\n                                        onClick={handleDelete}>\n                                    delete\n                                </Button>\n                            }\n                        </div>\n                       }\n                    {/*display appropriate message after a add,edit,delete category is done*/}\n                    <Typography  align=\"center\"  gutterBottom color={\"secondary\"}>\n                        {message}\n                    </Typography>\n                </Dialog>\n                {/*END OF CATEGORIES DISPLAY AND FUNCTIONALITY*/}\n\n                {/*START OF PROJECTS WORK DISPLAY AND FUNCTIONALITY*/}\n                {/*Dialog for Add ,Edit, Delete each project work */}\n                <Dialog open={openProjectDialog} onClose={()=> handleClose(\"project\")} >\n                    <DialogTitle id=\"simple-dialog-title\">\n                        {projectOption === \"add\" ? \"Add a new project\" : projectOption === \"edit\" ?\n                            \"Change project details\" : \"Delete Project\"}\n                    </DialogTitle>\n                    {/*display confirmation dialog when a project is deleted, or display respective fields to add or delete project work*/}\n                    {projectOption === \"delete\" ?\n                        <div>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    Are you sure you want to delete this project?\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={()=> handleClose(\"project\")} color=\"primary\">\n                                    No\n                                </Button>\n                                <Button onClick={handleDeleteProject} color=\"primary\" autoFocus>\n                                    Yes\n                                </Button>\n                            </DialogActions>\n                        </div>\n                        :\n                        projectOption === \"add\" || projectOption === \"edit\" ?\n                        <div>\n                            <form className={classes.formControl} noValidate autoComplete=\"off\">\n                                <div>\n                                    <TextField  id=\"standard-required\" label=\"Title\"\n                                                name={\"title\"}\n                                                value={projectObject.title}\n                                                onChange={handleChangeProjectDetails} />\n                                    <TextField  id=\"standard-disabled\" label=\"url\"\n                                                name={\"url\"}\n                                                value={projectObject.url}\n                                                onChange={handleChangeProjectDetails}   />\n                                    <TextField\n                                        margin=\"normal\"\n                                        label=\"Description\"\n                                        fullWidth\n                                        name=\"description\"\n                                        id=\"description\"\n                                        value={projectObject.description}\n                                        rows={2}\n                                        rowsMax={4}\n                                        multiline\n                                        onChange={handleChangeProjectDetails}\n                                    />\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Categories</InputLabel>\n                                    <Select\n                                        labelId=\"demo-mutiple-checkbox-label\"\n                                        fullWidth\n                                        id=\"demo-mutiple-checkbox\"\n                                        multiple\n                                        name={\"category\"}\n                                        value={projectObject.category}\n                                        onChange={handleChangeProjectDetails}\n                                        renderValue={(selected) => selected.join(', ')}\n                                        input={<Input />}\n\n                                    >\n                                        {categories.map((element,index,array) => (\n                                            <MenuItem key={`checkCat${element.name}${index}`} value={element.name}>\n                                                <Checkbox checked={projectObject.category.indexOf(element.name) > -1} />\n                                                <ListItemText primary={element.name} />\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n\n                                    <InputLabel style={{paddingTop:5}}>Choose image for thumbnail</InputLabel>\n                                    <input type={\"file\"} accept=\"image/*\" name={\"imageFile\"} className={classes.link}\n                                           onChange={handleImageUpload} />\n                                    {/* Dsiplay option to change default image only when editing a project work*/}\n                                    {projectOption === \"edit\"  ?\n                                    <Button color=\"primary\"\n                                            onClick={()=>handleDefaultImage(projectObject[\"_id\"],\"false\")}>\n                                        Upload the default image\n                                    </Button>\n                                        :\n                                        null\n                                    }\n                                </div>\n                                <Button color=\"primary\" variant=\"outlined\" className={classes.link}\n                                        onClick={()=>handleAddProject(projectOption)} disabled={projectObject.category.length < 1}>\n                                    save this project\n                                </Button>\n                            </form>\n                            {/*Display appropriate message when a project work id added,edited or deleted*/}\n                            <Typography  align=\"center\"  gutterBottom color={\"secondary\"}>\n                                {message}\n                            </Typography>\n                        </div>\n                        :\n                            null\n\n                        }\n\n                </Dialog>\n                {/*END OF PROJECTS WORK DISPLAY AND FUNCTIONALITY*/}\n\n\n                {/*Display projects based on category selected*/}\n            </AppBar>\n            <Grid container spacing={4}>\n                {allProjects.map((project,index,array) => (\n                    <Grid item key={`grid${project.title}${index}`} xs={12} sm={6} md={4}>\n                        <Card className={classes.card} key={`card${project.title}${index}`}>\n                            <CardMedia\n                                key={`cardMedia${project.title}${index}`}\n                                className={classes.cardMedia}\n                                image={\n                                    project.image ?\n                                    `http://www.sandhyasankaran.com/static/media/project${project[\"_id\"]}.jpg` :\n                                    require(`../images/default.jpg`)\n                                }\n                                title=\"Image title\"\n                            />\n                            <CardContent className={classes.cardContent}>\n                                {project.title !== undefined ?\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {project.title}\n                                    </Typography>:\n                                null }\n                                {project.url !== undefined ?\n                                    <Link gutterBottom component=\"a\">\n                                        {project.url}\n                                    </Link>\n                                    :\n                                    null}\n                                {project.description !== undefined ?\n                                    <Typography>\n                                        {project.description}\n                                    </Typography>\n                                    :\n                                    null}\n                            </CardContent>\n\n                            {/*ADMIN FUNCTIONALITY TO DISPLAY EDIT OR DELETE PROJECT WORK DIALOG*/}\n                            {props.isAdmin ?\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\"\n                                            onClick={()=>handleOpen(\"project\",\"edit\",project)}>\n                                        edit\n                                    </Button>\n                                    <Button size=\"small\" color=\"primary\"\n                                            onClick={()=>handleOpen(\"project\",\"delete\",project)}>\n                                        delete\n                                    </Button>\n                                </CardActions>\n                                :\n                                null\n                            }\n\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n};\n\nWork.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default Work","import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport Button from \"@material-ui/core/Button\";\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from \"prop-types\";\nimport Work from \"./Work\";\nlibrary.add(fab);\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    flexContainer : {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 0,\n    },\n    form: {\n        width: '75%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n        marginLeft:theme.spacing(5)\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n\n}));\n\n\n\n// Componenet social media\nconst SocialMedia =(props) =>{\n    const classes = useStyles();\n\n    //STATES\n    const [socialMedia,setSocialMedia] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [state, setState] = useState({});\n    const [editLink, setEditLink] = useState({});\n\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchData();\n\n    },[]);\n\n    //FUNCTIONS\n    // fetch all banner items from backend initially when component is mounted\n    async function fetchData() {\n        const response = await fetch('/socialMedia',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        //console.log(\"data got in social media\",jsonData);\n        //socialmedia\n        setSocialMedia(jsonData.socialMedia);\n    }\n\n    //function to set anchor state to open social media dialog\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    // function to close social media dialog\n    const handleClose = () => {\n        setAnchorEl(null);\n        //setEditLink({[event.target.name]:false,link:event.target.value})\n\n    };\n\n\n    //function to set state for social media name with its link\n    const handleEditClick = (socialMedia) =>{\n        setEditLink({[socialMedia.iconName]:true,link:socialMedia.link});\n    };\n\n    //function to handle social media display change\n    const handleChange = (event) => {\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            const iconName = event.target.name;\n            //console.log(event.target.name,event.target.checked.toString())\n            const iconToChangeIndex = socialMedia.findIndex((element,index,array)=>{\n                return element.iconName === event.target.name;\n            });\n            socialMedia[iconToChangeIndex].display = event.target.checked;\n            setSocialMedia(socialMedia);\n            setState({[event.target.name]:event.target.checked})\n\n            //console.log(\" after change\",socialMedia);\n\n            fetch('/socialMedia/display/'+event.target.name,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({[iconName]:event.target.checked.toString()})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n\n                });\n            })\n        }\n\n    };\n\n    // function to set state for which social media link to edit\n    const handleLink =(event)=>{\n        setEditLink({[event.target.name]:true,link:event.target.value})\n    };\n\n    // function to save the link provided for a social media icon\n    const handleSaveLink =(currentSocialMedia)=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            const iconToChangeIndex = socialMedia.findIndex((element,index,array)=>{\n                return element.iconName === currentSocialMedia.iconName;\n            });\n            socialMedia[iconToChangeIndex].link = editLink[\"link\"];\n            setSocialMedia(socialMedia);\n            //setState({[event.target.name]:event.target.checked})\n\n            //console.log(\" after change\",socialMedia);\n\n            fetch('/socialMedia/link/'+currentSocialMedia.iconName,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({[currentSocialMedia.iconName]:editLink[\"link\"]})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    setEditLink({[currentSocialMedia.iconName]:false,link:editLink[\"link\"]});\n\n                });\n            })\n        }\n\n    };\n\n    // function handle the click of cancel button while editing a social media link\n    const handleCancel =(event) =>{\n        setEditLink({[event.target.name]:false,link:event.target.value});\n    };\n\n    // Render component\n    return(\n        <div>\n        {/*    display all the socisl media that has display true*/}\n        <List position=\"fixed\" className={classes.flexContainer}>\n            {socialMedia.map((element,index,array)=>{\n                return element.display ?\n                    <ListItem key={`listItem${element.iconName}`}>\n                        <a href={element.link} target=\"_blank\">\n                            <FontAwesomeIcon icon= {[\"fab\",`${element.iconName.toLowerCase()}`]}\n                                             size=\"2x\"\n                                             color={element.iconName ===\"pinterest\" || element.iconName === \"youTube\"\n                                                 ? \"red\"\n                                                 :\n                                                 element.iconName === \"gitHub\" ? \"black\" :\"steelblue\"}/>\n                        </a>\n                    </ListItem> :\n                    null\n            })}\n        </List>\n            {/*FOR ADMIN control, display change social media button*/}\n            { props.isAdmin ?\n                <div>\n                    <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\"\n                            onClick={handleClick} className={classes.link}>\n                        change social media display!\n                    </Button>\n                    {/* dialog to change display and link of a social media icon*/}\n                    <Popover\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                    >  {socialMedia.map((element,index,array)=>{\n                        return  <MenuItem  key={`socialMedia${element.iconName}${index}`}>\n                            <Grid container spacing={10}>\n                                {/*display of social media icons*/}\n                                <Grid item xs={2} sm={2} md={2}>\n                                    {element.iconName}\n                                </Grid>\n                                {/*change social media display (true or false)*/}\n                                <Grid item xs={1} sm={1} md={1}>\n                                    <Switch\n                                        checked={state[element.iconName]|| element.display}\n                                        onChange={handleChange}\n                                        color=\"primary\"\n                                        name={element.iconName}\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                    />\n                                </Grid>\n                                {/*display of social media url links*/}\n                                <Grid item xs={6} sm={6} md={6}>\n                                    {editLink[element.iconName]?\n                                        <div>\n                                            <TextField\n                                                margin=\"normal\"\n                                                fullWidth\n                                                name={element.iconName}\n                                                value={editLink[\"link\"]}\n                                                id=\"link\"\n                                                autoComplete=\"message\"\n                                                onChange={handleLink}\n                                            />\n                                            <Link href=\"#\" color=\"primary\"\n                                                    className={classes.link} onClick={()=>handleSaveLink(element)}>\n                                                save\n                                            </Link>\n                                            <Link href=\"#\" color=\"primary\"\n                                                    className={classes.link} onClick={handleCancel}>\n                                                cancel\n                                            </Link>\n                                        </div>\n\n                                        :\n                                        <div>\n                                            <Typography component=\"span\"  align={\"left\"} gutterBottom >\n                                                {element.link}\n                                            </Typography>\n                                            <Link href=\"#\" color=\"primary\"\n                                                    className={classes.link} onClick={()=>handleEditClick(element)}>\n                                                edit link\n                                            </Link>\n                                        </div>\n\n                                    }\n                                </Grid>\n\n                            </Grid>\n                        </MenuItem>\n\n                    })}\n                    </Popover>\n                </div>\n                :\n                null\n            }\n        </div>\n\n    );\n};\n\nSocialMedia.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default SocialMedia","// The menu component\nimport React,{useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport SocialMedia from \"./SocialMedia\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PropTypes from 'prop-types';\n\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid`,\n        height:95,\n        [theme.breakpoints.down('sm')]: {\n            height: 200,\n        },\n\n    },\n    smallAppBar:{\n        borderBottom: `1px solid`,\n        height:70,\n        [theme.breakpoints.down('sm')]: {\n            height: 200,\n        },\n    },\n\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n\n// Component MenuItems\nconst MenuItems = (props)=> {\n    const classes = useStyles();\n\n    //State\n    const [menu, setMenu] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [state, setState] = useState({});\n    const [user,setUser] = useState(null);\n\n\n    //functions\n\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchData();\n\n    },[]);\n\n    // fetch all menu items from backend initially when component is mounted\n    async function fetchData() {\n        const response = await fetch('/menu',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        console.log(\"data got in menu\",jsonData.menu);\n        setMenu(jsonData.menu);\n\n\n    }\n\n    // fetch loggin user details from backend , set state user and set admin in app component\n    useEffect(  () => {\n        //console.log(\"kjkjkjkjkjk\");\n        fetch('/login/secret',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json()).then(function(data) {\n            console.log(data)\n            if(data.success){\n                let user = JSON.parse(data.User);\n                console.log(\"this is what we got from secret\"+data.User);\n                //_this.setState({user: user, role:user.role});\n                setUser(user[0]);\n                props.handleUser(user[0].isAdmin,user[0]);\n\n            }\n        });\n\n    },[]);\n\n    //function to handle menu display change (true or false)\n    const handleChange = (event) => {\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            const menuName = event.target.name;\n            console.log(event.target.name,event.target.checked.toString())\n            const menuToChangeIndex = menu.findIndex((element,index,array)=>{\n                return element.menu === event.target.name;\n            });\n            menu[menuToChangeIndex].display = event.target.checked;\n            setMenu(menu);\n            setState({[event.target.name]:event.target.checked})\n\n            console.log(\" after change\",menu);\n\n            fetch('/menu/display/'+event.target.name,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({[menuName]:event.target.checked.toString()})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    console.log(data);\n                });\n            })\n        }\n    };\n\n    //function to set anchor state to open menu dialog\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    // function to close menu\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    //Render component\n    return (\n        <div>\n            <AppBar position=\"fixed\" color=\"default\" elevation={0} className={props.isAdmin ? classes.appBar : classes.smallAppBar}>\n                <Toolbar className={classes.toolbar}>\n                    <GridList className={classes.toolbarTitle}>\n                        <SocialMedia isAdmin={props.isAdmin}/>\n                    </GridList>\n                    {/*Menu nav items display*/}\n                    <nav>\n                        {menu.map((item,index,array)=>{\n                            return item.display? <Link variant=\"button\" name={item.menu} color=\"textPrimary\"\n                                                       data-testid={`visible${item.menu}`}\n                                                       className={classes.link}\n                                                       onClick={(e)=>props.handleNavItemClick(e)}\n                                                       color={props.activeLink ===item.menu ? \"secondary\" :\"primary\"}\n                                                       key={`visible${item.menu}`}>\n                                {item.menu}\n                            </Link>\n                            : null\n                        })}\n\n                    </nav>\n                    {/*Menu display items ends*/}\n\n                    {/*FOR ADMIN control<------------------------>*/}\n                    { props.isAdmin ?\n                        <div>\n                            <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\"\n                                    onClick={handleClick} className={classes.link}>\n                                change menu\n                            </Button>\n                            <Menu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >  {menu.map((element,index,array)=>{\n                                return  <MenuItem  key={`menuDisplay${element.menu}${index}`}>\n                                    {element.menu}\n                                    <Switch\n                                        checked={state[element.menu]|| element.display}\n                                        onChange={handleChange}\n                                        color=\"primary\"\n                                        name={element.menu}\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                    />\n\n                                </MenuItem>\n\n                            })}\n                            </Menu>\n                        </div>\n                        :\n                        null\n                    }\n                    {/*    Admin control end here ------------------------>*/}\n\n                    {/*Login*/}\n                    {user === null ?\n                        <Button href={\"http://www.sandhyasankaran.com/login/auth/google\"} data-testid=\"login\"\n                                color=\"primary\" variant=\"outlined\" className={classes.link} style={{float:\"right\"}}>\n                            login\n                        </Button>\n                        :\n                        <Button data-testid={\"logout-details\"}>\n                                <Avatar alt=\"Profile Picture\" src={user.image} />\n\n                            <Button href={\"http://www.sandhyasankaran.com/login/logout\"} data-testid=\"logout\"\n                                    color=\"primary\" variant=\"outlined\" className={classes.link} style={{float:\"right\"}}>\n                                logout\n                            </Button>\n                        </Button>\n                    }\n\n                {/*    Login end*/}\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    );\n};\n\nMenuItems.propTypes ={\n    isAdmin: PropTypes.bool,\n    activeLink: PropTypes.string,\n    handleNavItemClick: PropTypes.func,\n    handleUser:PropTypes.func\n\n};\nexport default MenuItems\n\n","import React,{useState,useEffect} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {SketchPicker} from \"react-color\";\nimport Popover from \"@material-ui/core/Popover/Popover\";\nimport PropTypes from \"prop-types\";\nimport Work from \"./Work\";\n\n\n\n//Copyright information\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                sandhyasankaran.com\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n\n    footer: {\n        borderTop: `1px solid`,\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n        marginTop: 100,\n        paddingTop: 3,\n        paddingBottom: 3,\n        [theme.breakpoints.up('sm')]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n    link: {\n        margin: theme.spacing(1, 1)\n    },\n     popover : {\n        position: 'absolute',\n        zIndex: '2',\n         top: 500,\n         right: 10,\n         bottom: '0px'\n    }\n}));\n\n\n\n//Component Footer\nconst FooterDisplay =(props) =>{\n    const classes = useStyles();\n\n    //styles\n    //footer\n    const [footer,setFooter] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [state, setState] = useState({});\n    const [editValue, setEditValue] = useState({});\n    //bgColor\n    const [viewColor, setViewColor] = useState(null);\n    const [bgColor, setBgColor]  = useState('#e6e6e6');\n    const [baseColor,setBaseColor] = useState(bgColor); // for cancel button to restore previous value\n    //text color\n    const [textColor,setTextColor] = useState('black');\n    const [message,setMessage] =useState(\"\");\n\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchFooterData();\n        fetchColorData();\n\n    },[]);\n\n    // fetch all footer items from backend initially when component is mounted\n    async function fetchFooterData() {\n        const response = await fetch('/footer',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        //console.log(\"data got in footer\",jsonData);\n        //footer\n        setFooter(jsonData.footer);\n    }\n\n    // fetch all bgcolor and textcolor from backend initially when component is mounted\n    async function fetchColorData() {\n        const response = await fetch('/footer/color',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        console.log(\"data got in color\",jsonData);\n        //footer\n        setBgColor(jsonData.bgColor);\n        setBaseColor(jsonData.bgColor);\n        setTextColor(jsonData.textColor);\n    }\n\n    //function to handle footer display change\n    const handleChange = (event) => {\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            const footerName = event.target.name;\n            // console.log(event.target.name,event.target.checked.toString())\n            const footerToChangeIndex = footer.findIndex((element,index,array)=>{\n                return element.footerName === event.target.name;\n            });\n            footer[footerToChangeIndex].display = event.target.checked;\n            setFooter(footer);\n            setState({[event.target.name]:event.target.checked});\n\n            //console.log(\" after change\",footer);\n\n            fetch('/footer/display/'+event.target.name,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({[footerName]:event.target.checked.toString()})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n\n                });\n            })\n        }\n\n    };\n\n    //function to set anchor state to open menu dialog\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    // function to close menu\n    const handleClose =  ()=> {\n        setAnchorEl(null);\n    };\n\n    //set display of text area for each footer name\n    const handleEditValue=(footer) =>{\n        setEditValue({[footer.footerName]:true,value:footer.value});\n        //setEditValue({[footer.footerName]:true,value:footer.value});\n    };\n\n    //Edit value for each footer name\n    const handleText = (event)=>{\n        setEditValue({[event.target.name]:true,value:event.target.value});\n    };\n\n    //cancel edit footer value\n    const handleCancel = (event)=>{\n        setEditValue({[event.target.name]:false,value:event.target.value});\n    };\n\n    //save footer value\n    const handleSave =(footerDetails)=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            const footerToChangeIndex = footer.findIndex((element,index,array)=>{\n                return element.footerName === footerDetails.footerName;\n            });\n            footer[footerToChangeIndex].value = editValue[\"value\"];\n            setFooter(footer);\n            //setState({[event.target.name]:event.target.checked});\n\n            fetch('/footer/value/'+footerDetails.footerName,  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({[footerDetails.footerName]:editValue[\"value\"]})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    console.log(data);\n                    //setBaseState(data.tagLine)\n                    //setEditValue({[footerDetails.footerName]:false,value:editValue[\"value\"]});\n                    setEditValue({[data.footer.footerName]:false,value:data.footer.value});\n\n\n                });\n            })\n        }\n\n    };\n\n    //Background color functions\n    const handleColor =(event) =>{\n        setViewColor(event.currentTarget);\n    };\n\n    const handleChangeComplete = (color) =>{\n        //console.log(\"color\",color);\n        setBgColor(color.hex);\n    };\n\n    const handleCancelBackground = ()=>{\n        setBgColor(baseColor);\n        setViewColor(null);\n    };\n\n    const handleSaveBackground =()=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/footer/bgColor',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({bgColor:bgColor})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    if(data.success){\n                        setBgColor(data.bgColor);\n                    }\n                    setViewColor(null);\n                });\n            })\n        }\n\n    };\n\n    //Text color functions\n    const handleTextColor =() =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            textColor === \"black\" ? setTextColor(\"white\") : setTextColor(\"black\");\n            fetch('/footer/textColor',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({textColor:textColor === \"black\"? \"white\" :\"black\"})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    if(data.success){\n                        setTextColor(data.textColor);\n                    }\n                    setMessage(data.message);\n                    alert(data.message);\n                });\n            })\n        }\n\n\n    };\n\n    // render component\n    return (\n        <Container maxWidth=\"xl\" component=\"footer\" className={classes.footer} style={{backgroundColor: bgColor}}>\n            <Grid container spacing={5} justify=\"space-evenly\">\n                {footer.map((element,index,array) => {\n                    return element.display\n                        ? <Grid item xs={3} sm={3} key={`grid${element.footerName}`}>\n                        <Typography variant=\"h6\"  gutterBottom key={`title${element.footerName}`}\n                                     style={{color:textColor}}>\n                            {element.footerName.charAt(0).toUpperCase()+element.footerName.slice(1)}\n                        </Typography>\n                        <ul key={`ul${element.footerName}`}>\n                            <li key={`li${element.footerName}`}>\n                                    <Typography color=\"textSecondary\" gutterBottom key={`value${element.footerName}`}\n                                                style={{color:textColor === \"black\" ? \"grey\" :textColor}}>\n                                        {element.value}\n                                    </Typography>\n\n                            </li>\n                        </ul>\n                    </Grid>\n                        :\n                        null\n                    })}\n\n                {/*FOR ADMIN control<------------------------>*/}\n                { props.isAdmin ?\n                    <div>\n                        <div>\n                            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" color=\"primary\"\n                                    variant=\"outlined\"\n                                    onClick={handleClick} className={classes.link}>\n                                change footer here!\n                            </Button>\n                            <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                    className={classes.link} onClick={handleColor}>\n                                choose background\n                            </Button>\n                            <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                    className={classes.link} onClick={handleTextColor}>\n                                change text color to white/black\n                            </Button>\n                        </div>\n\n                        {/*Change footer text values dialog*/}\n                        <Popover\n                            id=\"footer\"\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                            anchorReference=\"anchorPosition\"\n                            anchorPosition={{ top: 600, left: 200 }}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            transformOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                        >  {footer.map((element,index,array)=>{\n                            return  <MenuItem  key={`footerName${element.footerName}${index}`}>\n                                <Grid container spacing={9}>\n                                    <Grid item xs={2} sm={2} md={2}>\n                                        {element.footerName}\n                                    </Grid>\n                                    <Grid item xs={1} sm={1} md={1}>\n                                        <Switch\n                                        checked={state[element.footerName]|| element.display}\n                                        onChange={handleChange}\n                                        color=\"primary\"\n                                        name={element.footerName}\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6} sm={6} md={6}>\n                                        {editValue[element.footerName]?\n                                            <div>\n                                                <TextField\n                                                    margin=\"normal\"\n                                                    fullWidth\n                                                    name={element.footerName}\n                                                    value={editValue[\"value\"]}\n                                                    id=\"editValue\"\n                                                    autoComplete=\"message\"\n                                                    onChange={handleText}\n                                                />\n                                                <Link href=\"#\" color=\"primary\"\n                                                      className={classes.link} onClick={() =>handleSave(element)}>\n                                                    save\n                                                </Link>\n                                                <Link href=\"#\" color=\"primary\"\n                                                      className={classes.link} onClick={handleCancel}>\n                                                    cancel\n                                                </Link>\n                                            </div>\n\n                                            :\n                                            <div>\n                                                <Typography component=\"span\"  align={\"left\"} gutterBottom >\n                                                    {element.value}\n                                                </Typography>\n                                                <Link href=\"#\" color=\"primary\"\n                                                      className={classes.link} onClick={()=>handleEditValue(element)}>\n                                                    edit value\n                                                </Link>\n                                            </div>\n\n\n                                        }\n\n                                    </Grid>\n\n                                </Grid>\n\n                            </MenuItem>\n\n                        })}\n                        </Popover>\n                            {/*Change background color for  footer*/}\n                            <Popover\n                                id=\"backgorundColor\"\n                                anchorEl={viewColor}\n                                open={Boolean(viewColor)}\n                                onClose={handleCancelBackground}\n                                anchorReference=\"anchorPosition\"\n                                anchorPosition={{ top: 950, left: 600 }}\n                            >\n                            <SketchPicker\n                                className={classes.sketch}\n                                color={bgColor}\n                                onChangeComplete={handleChangeComplete }/>\n                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                        className={classes.link}\n                                        onClick={handleSaveBackground}>\n                                    save\n                                </Button>\n                            </Popover>\n\n                    </div>\n                    :\n                    null\n                }\n                {/*    Admin control end here ------------------------>*/}\n\n            </Grid>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n\n    );\n};\n\nFooterDisplay.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default FooterDisplay\n\n","// The Banner component - Title and tagline of owner with photo\nimport React, {useEffect, useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { deepPurple } from '@material-ui/core/colors';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport { SketchPicker } from 'react-color';\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport PropTypes from \"prop-types\";\nimport Work from \"./Work\";\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        width:'100%',\n        padding: theme.spacing(8, 0, 6),\n        marginTop:95,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 200,\n            fontSize:'20%'\n\n        },\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: \"purple\",\n        [theme.breakpoints.down('sm')]: {\n            width: theme.spacing(5),\n            height: theme.spacing(5),\n\n        },\n    },\n    noAdminBanner: {\n        width:'100%',\n        padding: theme.spacing(8, 0, 6),\n        marginTop:70,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 200,\n            fontSize:'20%'\n\n        },\n    },\n    form: {\n        width: '75%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n        marginLeft:theme.spacing(5)\n    },\n    link: {\n        margin: theme.spacing(1, 1),\n        [theme.breakpoints.down('sm')]: {\n           fontSize:'7px'\n\n        },\n\n    },\n    sketch:{\n        marginLeft: 25\n    },\n    text:{\n        [theme.breakpoints.down('sm')]: {\n            fontSize:'small'\n\n        },\n    },\n    title: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 'large'\n\n        },\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 120,\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        }\n    },\n}));\n\n// Component Banner\nconst Banner =(props)=>{\n    const classes = useStyles();\n\n    //States\n    const ownerName = \"Sandhya Sankaran\";\n    //tagline\n    const [tagLine,setTagLine] = useState(\"\");\n    const [baseState,setBaseState] = useState(tagLine); // for cancel button to restore previous value\n    const [viewTextArea, setViewTextArea] = useState(false);\n    //image\n    const [imageFile,setImageFile] = useState(null);\n    const [viewUploadedImage,setViewUploadedImage] = useState(false);\n    //bgColor\n    const [viewColor, setViewColor] = useState(false);\n    const [bgColor, setBgColor]  = useState('#e6e6e6');\n    const [baseColor,setBaseColor] = useState(bgColor); // for cancel button to restore previous value\n    //text color\n    const [textColor,setTextColor] = useState('black');\n    const [message,setMessage] = useState(\"\");\n\n\n\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchData();\n\n    },[]);\n\n    // fetch all banner items from backend initially when component is mounted\n    async function fetchData() {\n        const response = await fetch('/banner',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        const jsonData =  await response.json();\n        //console.log(\"data got in banner\",jsonData);\n        //Tagline\n        setTagLine(jsonData.tagLine);\n        setBaseState(jsonData.tagLine);\n        //image\n        setViewUploadedImage(jsonData.image);\n        //bgColor\n        setBgColor(jsonData.bgColor);\n        setBaseColor(jsonData.bgColor);\n        //textcolor\n        setTextColor(jsonData.textColor);\n\n\n    }\n\n    // TagLine functions\n    const handleEditTagLine = () => {\n        setViewTextArea(true);\n    };\n\n    const handleCancel = () =>{\n        setTagLine(baseState);\n        setViewTextArea(false);\n    };\n\n    const handleChange = (event)=>{\n        setTagLine(event.target.value);\n    };\n\n    const handleSave = () =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/banner',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({tagLine:tagLine})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    if(data.success){\n                        setTagLine(data.tagLine);\n                    }\n                    //console.log(data);\n                    //setBaseState(data.tagLine)\n                    //setViewTextArea(false);\n                    setMessage(data.message);\n\n                });\n            })\n        }\n\n    };\n\n    // Image functions\n    const handleImageUpload = (event)=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            setImageFile(event.target.files[0]);\n            const formData = new FormData();\n            formData.append('myImage', event.target.files[0]);\n            fetch(`/banner/upload`,{\n                method: 'POST',\n                // headers:{\n                //     'Content-type': 'multipart/form-data'\n                // },\n                body: formData\n            }).then( response => response.json()).then(data => {\n                if(!data.success){\n                    alert(data.message);\n                }\n                else{\n                    handleDefaultImage(\"true\");\n                }\n            });\n        }\n\n    };\n\n\n    const handleDefaultImage =(booleanString)=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/banner/image',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({image:booleanString})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    console.log(data);\n                    //alert(\"image changed\");\n                    setViewUploadedImage(data.image);\n                    if(booleanString === \"false\"){\n                        setMessage(\"Image changed to default pic\");\n                    }\n                    else{\n                        setMessage(\"Image changed!\");\n                    }\n\n                });\n            })\n        }\n        //setImageFile(null);\n    };\n\n    //Background color functions\n    const handleColor =() =>{\n        setViewColor(!viewColor);\n    };\n\n    const handleChangeComplete = (color) =>{\n        //console.log(\"color\",color);\n        setBgColor(color.hex);\n    };\n\n    const handleCancelBackground = ()=>{\n        setBgColor(baseColor);\n        setViewColor(!viewColor);\n    };\n\n    const handleSaveBackground =()=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/banner/bgColor',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({bgColor:bgColor})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    setBgColor(data.bgColor);\n                    setViewColor(false);\n\n                });\n            })\n        }\n\n    };\n\n    //Text color functions\n    const handleTextColor =() =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            textColor === \"black\" ? setTextColor(\"white\") : setTextColor(\"black\");\n            fetch('/banner/textColor',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({textColor:textColor === \"black\"? \"white\" :\"black\"})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    setTextColor(data.textColor);\n                });\n            })\n        }\n    };\n\n\n\n// render component\n    return(\n        <Container maxWidth=\"xl\" className={props.isAdmin? classes.heroContent : classes.noAdminBanner}\n                   style={{backgroundColor: bgColor}}>\n            <Grid container spacing={4}>\n                <Grid item xs={7} sm={7} md={9}>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\"  gutterBottom style={{color:textColor}}\n                                className={classes.title}>\n                        {props.title === \"home\"? \"Sandhya Sankaran\" : props.title.charAt(0).toUpperCase()+props.title.slice(1)}\n                    </Typography>\n                    <div>\n\n                            <Typography variant=\"h5\" align=\"center\" paragraph className={classes.text}\n                                        style={{color:textColor === \"black\" ? \"grey\" :textColor,marginLeft:25}}>\n                                {tagLine}\n                            </Typography>\n\n\n                        {/*ADMIN controls --------------->*/}\n\n                        { props.isAdmin ?\n                                    <div>\n                                        {!viewColor ?\n                                            <div>\n                                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                        className={classes.link} onClick={handleEditTagLine}>\n                                                    edit data and image\n                                                </Button>\n                                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                        className={classes.link} onClick={handleColor}>\n                                                    choose background\n                                                </Button>\n                                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                        className={classes.link} onClick={handleTextColor}>\n                                                    Change text color to white/black\n                                                </Button>\n                                            </div> :\n                                            <div>\n                                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                        className={classes.link} onClick={handleCancelBackground}>\n                                                    cancel\n                                                </Button>\n                                                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                        className={classes.link}\n                                                        onClick={handleSaveBackground}>\n                                                    save\n                                                </Button>\n                                            </div>\n                                        }\n                                    </div>\n\n                            :\n                            null\n                        }\n\n                        {/*end of admin control ------------>*/}\n                    </div>\n                    { viewColor ?\n                        <SketchPicker\n                            className={classes.sketch}\n                            color={bgColor}\n                            onChangeComplete={handleChangeComplete }/>\n                        :\n                        null\n                    }\n                </Grid>\n\n                <Grid item xs={5} sm={5} md={3}>\n                    {viewUploadedImage ?\n                        <Avatar alt=\"SS\" className={classes.large } src=\"http://www.sandhyasankaran.com/static/media/bannerImage.jpg\" />\n                        :\n                        <Avatar alt=\"SS\" className={classes.large }>\n                            {ownerName.split(\" \")[0][0].toUpperCase()+\n                            ownerName.split(\" \")[1][0].toUpperCase()}\n                        </Avatar>\n\n                    }\n\n\n                {/*    ADMIN CONTROL*/}\n                    {props.isAdmin ?\n                        <Dialog open={viewTextArea} onClose={handleCancel} >\n                            <DialogTitle id=\"simple-dialog-title\">\n                                Edit Banner details\n                            </DialogTitle>\n                                    <div>\n                                        <form className={classes.formControl} noValidate autoComplete=\"off\">\n                                            <div>\n                                                <TextField\n                                                    margin=\"normal\"\n                                                    fullWidth\n                                                    name=\"tagLine\"\n                                                    value={tagLine}\n                                                    id=\"tagLine\"\n                                                    autoComplete=\"message\"\n                                                    multiline\n                                                    rows={2}\n                                                    rowsMax={4}\n                                                    onChange={handleChange}\n                                                />\n\n                                                <InputLabel style={{paddingTop: 5}}>Choose image for banner</InputLabel>\n                                                <input type={\"file\"} accept=\"image/*\" name={\"imageFile\"} className={classes.link}\n                                                       onChange={handleImageUpload}/>\n                                                {viewUploadedImage ?\n                                                    <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                                            className={classes.link} onClick={()=>handleDefaultImage(\"false\")}>\n                                                        use default image\n                                                    </Button>\n                                                :\n                                                null\n                                                }\n\n\n                                            </div>\n                                            <Button color=\"primary\" variant=\"outlined\" className={classes.link}\n                                                    onClick={handleSave}\n                                                    disabled={tagLine.length < 1 || tagLine === baseState}>\n                                                save\n                                            </Button>\n                                        </form>\n\n                                        <Typography align=\"center\" gutterBottom color={\"secondary\"}>\n                                            {message}\n                                        </Typography>\n                                    </div>\n\n                        </Dialog>\n\n                        :\n                        null\n                    }\n                {/*End of admin control*/}\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nBanner.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default Banner;\n","import React,{useState,useEffect} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport PropTypes from \"prop-types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    text:{\n        [theme.breakpoints.down('sm')]: {\n            fontSize:'medium'\n\n        },\n    },\n    title: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 'large',\n            fontWeight:'bold'\n\n        },\n    }\n}));\n\nconst Home=(props)=>{\n    const classes = useStyles();\n    const [aboutMe,setAboutMe] = useState(\"\");\n    const [baseState,setBaseState] = useState(aboutMe); // for cancel button to restore previous value\n    const [viewTextArea, setViewTextArea] = useState(false);\n\n\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchData();\n\n    },[]);\n\n    // fetch all aboutME items from backend initially when component is mounted\n    async function fetchData() {\n        const response = await fetch('/home',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        console.log(\"data got in home\",jsonData);\n        //about me\n        setAboutMe(jsonData.aboutMe);\n        setBaseState(jsonData.aboutMe);\n\n\n    }\n\n    const handleChange=(event)=>{\n        setAboutMe(event.target.value)\n    };\n\n    const handleEditAboutMe =()=>{\n        setViewTextArea(true);\n    };\n\n    const handleCancel =()=>{\n        setAboutMe(baseState);\n        setViewTextArea(false);\n    };\n\n    const handleSave =()=>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/home',  {\n                method: 'PUT',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({aboutMe:aboutMe})\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    //setBaseState(data.tagLine)\n                    setViewTextArea(false);\n                });\n            })\n        }\n    };\n\n\n    return (\n        <div>\n            <Typography variant=\"h2\" component=\"h1\" gutterBottom className={classes.title}>\n                About Me\n            </Typography>\n            {viewTextArea ?\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"aboutMe\"\n                        value={aboutMe}\n                        id=\"tagLine\"\n                        autoComplete=\"message\"\n                        multiline\n                        rows={2}\n                        rowsMax={4}\n                        onChange={handleChange}\n                    />\n                </form> :\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom className={classes.text}>\n                    {aboutMe}\n                </Typography>\n            }\n\n            {/*Admin control*/}\n            {props.isAdmin\n                ?\n                !viewTextArea\n                    ?\n                <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                        className={classes.link} onClick={handleEditAboutMe}>\n                    edit about me\n                </Button>\n                    :\n                    <div>\n                        <Button href=\"#\" color=\"primary\" variant=\"outlined\"\n                                className={classes.link} onClick={handleCancel}>\n                            cancel\n                        </Button>\n                        <Button href=\"#\" color=\"primary\" variant=\"outlined\" className={classes.link}\n                                onClick={handleSave}>\n                            save\n                        </Button>\n                    </div>\n                :\n                null\n            }\n\n        {/*    End of Admin control*/}\n        </div>\n    );\n};\n\nHome.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default Home\n","import React,{useState,useEffect} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport ReactMarkdown from 'react-markdown/with-html';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MoreHorizRoundedIcon from '@material-ui/icons/MoreHorizRounded';\nimport PropTypes from \"prop-types\";\nimport Work from \"./Work\";\n\n\n//Material ui styles\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n        height:200,\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    flexContainer : {\n        display: 'flex',\n        flexDirection: 'row',\n        padding:0\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n        '& .MuiListItem-button': {\n            margin: theme.spacing(1, 1.5)\n        }\n    },\n    appBar:{\n        margin: theme.spacing(0,0,3,0),\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 120,\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        }\n    },\n    comment:{\n        backgroundColor: '#e6e6e6',\n        padding: theme.spacing(2, 2, 2, 2),\n        border: '1px solid #ced4da',\n        borderRadius: theme.spacing(1),\n        width: '100%',\n        overflow: 'auto',\n        overflowX: 'auto',\n        overflowY: 'auto'\n\n    }\n}));\n\n\n// Component Blog\nconst Blog = (props) =>{\n    const classes = useStyles();\n    //STATES\n    //blog add,edit,delete\n    const [blogs ,setBlogs] = useState([]);\n    const [open,setOpen] = useState(false);\n    const [blogOption , setBlogOption] = useState(\"add\");\n    const [blogObject,setBlogObject] = useState({_id:null,topic:\"\",content:\"\",comments:[],likes:[]});\n    const [message,setMessage] = useState(\"\");\n    //image state\n    const [imageFile,setImageFile] = useState(null);\n    // state to view blog\n    const [viewBlog,setViewBlog] = useState(false);\n    //comment state\n    const [comment,setComment] = useState(\"\");\n\n\n    //FUNCTIONS\n    // similar to componentDidMount and componentDidUpdate\n    useEffect(  () => {\n        // call fetchdata() to fetch all initial data\n        fetchBlogs();\n    },[]);\n\n    // fetch all blog items from backend initially when component is mounted\n    async function fetchBlogs() {\n        const response = await fetch('/blog',{\n            method: \"GET\",\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        const jsonData =  await response.json();\n        console.log(\"data got in blog\",jsonData);\n        //categories\n        setBlogs(jsonData.blog);\n    }\n\n    // START OF FUNCTIONS FOR ADD/EDIT/DELETE BLOG\n    // function to open dialog based on options \"add\", \"edit\" or \"delete\" selected\n    const handleOpen = (option,blogDetails) => {\n        if (option === \"add\") {\n            setBlogOption(\"add\");\n        }\n        else if(option === \"edit\"){\n            setBlogOption(\"edit\");\n            setBlogObject({_id:blogDetails._id,topic:blogDetails.topic,content:blogDetails.content,\n                comments: blogDetails.comments,likes:blogDetails.likes})\n        }\n        else if(option === \"delete\"){\n            setBlogOption(\"delete\");\n            setBlogObject({_id:blogDetails._id});\n        }\n        setOpen(true);\n\n    };\n\n    // function to close dialog for add, edit delete blog\n    const handleClose = () =>{\n        setBlogs(blogs);\n        setOpen(false);\n        setBlogObject({topic:\"\",content:\"\",_id:null});\n        setImageFile(null);\n        setMessage(\"\");\n\n    };\n\n    // function set state for blog object with details of selected blog\n    const handleChangeBlogDetails =(event) =>{\n        setBlogObject({...blogObject,[event.target.name]:event.target.value})\n    };\n\n    // function to set state for blog object \"content\" based on markdown uploaded\n    const handleContent =(e) =>{\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        if (e.target.value.length !== 0) {\n            reader.onloadend = async (e) => {\n                // The file's text will be printed here\n\n                setBlogObject({...blogObject,content:e.target.result})\n                console.log(\"this.state.content: \",blogObject.content);\n            };\n\n            reader.readAsText(file);\n        }\n        else{\n            setBlogObject({...blogObject,content:blogObject.content});\n        }\n\n    };\n\n    // function to add or edit a new blog\n    const handleSaveBlog =(addOrEdit) => {\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            // call to add a new blog\n            if (addOrEdit === \"add\") {\n                fetch('/blog', {\n                    method: 'POST',\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({topic: blogObject.topic, content: blogObject.content})\n                }).then((response) => {\n                    response.json().then((data) => {\n                        console.log(\"create blog\",data);\n                        if (data.success) {\n                            //console.log(\"imageFile:\",imageFile);\n                            if (imageFile !== null) {\n                                //console.log(\"jffjhfjdhfjdhfdj\");\n                                uploadImage(data.blog[\"_id\"])\n                            }\n                            blogs.push(data.blog);\n                            //setCategories(categories);\n                        }\n                        setMessage(data.message);\n                        setBlogObject({topic: \"\", content: \"\", comments: [], likes: []})\n\n                    });\n                })\n            }\n            // call to edit a new blog\n            else if(addOrEdit === \"edit\"){\n                fetch('/blog/'+blogObject[\"_id\"],  {\n                    method: 'PUT',\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({topic:blogObject.topic, content:blogObject.content})\n                })\n                    .then( (response)=> {\n                        response.json().then((data) => {\n                            if(data.success){\n                                console.log(\"in put: \",data);\n                                if(imageFile !== null){uploadImage(blogObject[\"_id\"]);}\n                                const indexToChange = blogs.findIndex((element,index,array)=>{\n                                    return element[\"_id\"] === blogObject[\"_id\"];\n                                });\n                                blogs[indexToChange] = data.blog;\n                            }\n                            setMessage(data.message);\n                            setBlogObject({topic:\"\",content:\"\"});\n\n                        });\n                    })\n            }\n        }\n\n    };\n\n    // function to delete a blog\n    const handleDeleteBlog =() =>{\n        let user = props.user;\n        if(user === null){\n            alert(\"Login to perform this action!\")\n        }\n        else{\n            fetch('/blog/'+blogObject[\"_id\"],  {\n                method: 'DELETE',\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n            }).then( (response)=> {\n                response.json().then((data) => {\n                    //console.log(data);\n                    if(data.success){\n                        console.log(\"category deleted:\",data);\n                        const indexToChange = blogs.findIndex((element,index,array)=>{\n                            return element[\"_id\"] === data.deletedBlog[\"_id\"]\n                        });\n                        console.log(\"index:\",indexToChange);\n                        blogs.splice(indexToChange,1);\n                        //console.log(\"blogs\",cc);\n                        //setBlogs(blogs);\n                        //setMessage(data.message);\n                    }\n                });\n            });\n            handleClose();\n        }\n\n    };\n    // END OF FUNCTIONS FOR ADD/EDIT/DELETE BLOG\n\n   // handle image functions\n    const handleImageUpload =(event) =>{\n        setImageFile(event.target.files[0]);\n    };\n\n    const uploadImage =(blogId) =>{\n        const formData = new FormData();\n        formData.append('blogImage', imageFile);\n        fetch(`/blog/upload/`+blogId,{\n            method: 'POST',\n            // headers:{\n            //     'Content-type': 'multipart/form-data'\n            // },\n            body: formData\n        }).then( response => response.json()).then(data => {\n            if(!data.success){\n                alert(data.message);\n            }\n            else{\n                handleDefaultImage(blogId,\"true\")\n            }\n        });\n    };\n\n    const handleDefaultImage =(blogId,booleanString)=>{\n        fetch('/blog/image/'+blogId,  {\n            method: 'PUT',\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({image:booleanString})\n        }).then( (response)=> {\n            response.json().then((data) => {\n                //console.log(\"handle image:\"+data);\n                const indexToChange = blogs.findIndex((item,index,array)=>{\n                    return item[\"_id\"] === blogId\n                })\n                blogs[indexToChange].image = data.image;\n                if(booleanString === \"false\"){\n                    setMessage(\"Image changed to default pic\");\n                }\n\n            });\n        })\n    };\n\n\n\n    // function when a blog \"View\" button is clicked\n    const viewArticle =(blogDetails) =>{\n        console.log(\"blogDetails: \",blogDetails);\n        setViewBlog(!viewBlog);\n        if(blogDetails!== null){\n            setBlogObject({_id:blogDetails._id,topic:blogDetails.topic,content:blogDetails.content,\n                comments: blogDetails.comments,likes:blogDetails.likes})\n        }\n\n    };\n\n    // COMMENT FUNCTIONS\n    // function to set state for comment text\n    const handleCommentChange =(event) =>{\n        setComment(event.target.value);\n    };\n\n    // function to add a new comment\n    const addComment = () =>{\n        let user = props.user;\n        if(user === null){\n            setMessage(\"Login to comment\")\n        }\n        else{\n            fetch(`/blog/comment/${blogObject._id}`,{\n                method:'POST',\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({profileId:props.user.googleId,name:props.user.displayName,\n                    image:props.user.image,\n                    comment:comment})\n            }).then(response => response.json()).then(data =>{\n                //console.log(data);\n                if(data.success){\n                    console.log(\"in post comments: \",data);\n                    //if(imageFile !== null){uploadImage(blogObject[\"_id\"]);}\n                    const indexToChange = blogs.findIndex((element,index,array)=>{\n                        return element[\"_id\"] === blogObject[\"_id\"];\n                    });\n                    const newBlog = data.blog;\n                    blogs[indexToChange] = newBlog;\n                    blogObject.comments.push(newBlog.comments[newBlog.comments.length - 1]);\n                    setComment(\"\");\n                }\n\n                setMessage(data.message);\n            })\n        }\n    };\n\n    // function to delete a comment\n    const deleteComment =(index,id,profileId) =>{\n        if(window.confirm(\"Are you sure?\")){\n            let user = props.user;\n            if(user === null){\n                alert(\"Login to comment\");\n            }\n            else{\n\n                fetch(`/comments/${blogObject._id}`,{\n                    method:'DELETE',\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify({id:id,profileId:profileId})\n                }).then(response => response.json()).then(data =>{\n                    //console.log(data);\n                    if(data.success){\n                        console.log(\"in post comments: \",data);\n                        //if(imageFile !== null){uploadImage(blogObject[\"_id\"]);}\n                        const indexToChange = blogs.findIndex((element,index,array)=>{\n                            return element[\"_id\"] === blogObject[\"_id\"];\n                        });\n                        const newBlog = data.blog;\n                        blogs[indexToChange] = newBlog;\n                        blogObject.comments.splice(1);\n\n                    }\n\n                    setMessage(data.message);\n                })\n            }\n        }\n\n    };\n\n    // LIKE FUNCTIONS\n    // function to add or remove a like\n    const handleLike =(blog) =>{\n        let user = props.user;\n        if(user === null){\n            setMessage(\"Login to like\");\n        }\n       else{\n        let blogDetails = null;\n        if(blog == null){\n             blogDetails = blogObject;\n        }\n        else{\n            blogDetails = blog;\n        }\n\n        if(blogDetails.likes.find((element,index,array)=> {\n            // if user is not found add like\n                return element === props.user.googleId }) === undefined)\n            {\n                fetch(`/blog/like/${blogDetails._id}`,{\n                    method:'POST',\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                        'Accept': 'application/json'\n\n                    },\n                    body: JSON.stringify({profileId:props.user.googleId })\n                }).then(response => response.json()).then(data => {\n                    if (data.success) {\n                        console.log(\"in post like: \", data);\n                        //if(imageFile !== null){uploadImage(blogObject[\"_id\"]);}\n                        const indexToChange = blogs.findIndex((element, index, array) => {\n                            return element[\"_id\"] === blogDetails[\"_id\"];\n                        });\n                        const newBlog = data.blog;\n                        blogs[indexToChange] = newBlog;\n                        blogDetails.likes.push(props.user.googleId );\n                    }\n                    setMessage(data.message);\n                });\n\n            }\n            // if user is found remove like\n            else{\n                //console.log('jhjfhdjfhdjfhdjhdjfhdjfhdjfhd');\n                fetch(`/blog/like/${blogDetails._id}`,{\n                    method:'DELETE',\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                        'Accept': 'application/json'\n\n                    },\n                    body: JSON.stringify({profileId:props.user.googleId })\n                }).then(response => response.json()).then(data =>{\n                    if (data.success) {\n                        console.log(\"in delete like: \", data);\n\n                        const indexToChange = blogs.findIndex((element, index, array) => {\n                            return element[\"_id\"] === blogDetails[\"_id\"];\n                        });\n                        const newBlog = data.deletedLikes;\n                        blogs[indexToChange] = newBlog;\n                       const cc =  blogDetails.likes.filter((element,index,array) =>{\n                            return element !== props.user.googleId\n                       });\n                       console.log('cc',cc);\n                        blogDetails.likes = cc;\n                    }\n                    setMessage(data.message);\n                })\n            }\n        }\n    };\n\n    // Render component\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/*View the blog when the \"View\" button is clicked*/}\n            {viewBlog ?\n                <div>\n                    <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\" className={classes.link}\n                            onClick={()=>viewArticle(null)}>\n                        back\n                    </Button>\n                    <Typography variant=\"h4\" component=\"h2\" align={\"center\"}>\n                        {blogObject.topic}\n                    </Typography>\n                    {/*display blog content by markdown converter*/}\n                    <ReactMarkdown source={blogObject.content} />\n                    {/*display the number of comments and like functionality*/}\n                    <div className={\"commentDiv\"}>\n                        <Toolbar>\n                            <Typography variant={\"body2\"} variantMapping={{body2 : 'span'}}>\n                                <strong>{`${blogObject.comments.length} Comments `}</strong>\n                            </Typography>\n                        <div style={{marginLeft: 'auto'}}>\n                            {blogObject.likes.length}\n                            <IconButton onClick={()=>handleLike(null)}\n                                        color={blogObject.likes.includes(props.user.googleId) ? 'primary' : 'default'}>\n                            <ThumbUpAltIcon/>\n                            </IconButton>\n\n                        </div>\n                        </Toolbar>\n\n                        {/*display all the comments*/}\n\n                        <List className={classes.list}>\n                                {blogObject.comments.map(( element, index, array)  => {\n                                       return  <ListItem key={`commentList${element.profileId}${index}`}>\n                                            <ListItemAvatar>\n                                                <Avatar variant=\"rounded\" alt=\"Profile Picture\" src={element.image} />\n                                            </ListItemAvatar>\n                                           <div className={classes.comment}>\n                                               <Typography style={{ display: \"flex\", justifyContent: \"space-between\", fontSize:'small'}}\n                                                           color=\"textSecondary\">\n                                                   {element.name}\n                                                   <span>{new Date(element.date).toLocaleString()}</span>\n                                               </Typography>\n\n                                               <Typography key={`comment${element.profileId}${index}`}\n\n                                                           variant={\"body1\"} color={\"textPrimary\"}>\n                                                   {element.comment}\n                                               </Typography>\n                                           </div>\n                                               {/* display delete button for comment for ADMIN and the user who posted the comment*/}\n                                               {props.isAdmin ?\n                                                   <Button  color=\"primary\" variant=\"outlined\" className={classes.link}\n                                                            onClick={()=>deleteComment(index,element._id,element.profileId)}>\n                                                       delete\n                                                   </Button> :\n                                               null}\n                                        </ListItem>\n                                })}\n                            {/*    Text box for posting a comment*/}\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar alt=\"Profile Picture\" >..</Avatar>\n                                </ListItemAvatar>\n                                    <TextField className=\"comment\"\n                                               label=\"Comment\"\n                                               multiline\n                                               rows={2}\n                                               column={14}\n                                               rowsMax={4}\n                                               variant=\"outlined\"\n                                               onChange={handleCommentChange}\n                                               name={\"comment\"}\n                                               value={comment}\n                                               fullWidth\n                                    />\n                            </ListItem>\n                            <ListItem>\n                                    <Button  color=\"primary\" variant=\"outlined\" className={classes.link}\n                                    onClick={addComment}>\n                                        add comment\n                                    </Button>\n                            </ListItem>\n\n                            </List>\n                    </div>\n                </div>\n                :\n                <div>\n                {/*    THE MAIN BLOG PAGE - DISPLAY ALL BLOGS AND ITS FUNCTIONALITIES*/}\n                {\n                    props.isAdmin ?\n                        <Button aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\" className={classes.link}\n                                onClick={() => handleOpen(\"add\")}>\n                            add a new blog content\n                        </Button>\n                        :\n                        null\n                }\n            {/*Dialog to add, edit and delete a blog*/}\n                <Dialog open={open} onClose={handleClose} >\n                <DialogTitle id=\"simple-dialog-title\">\n                {blogOption === \"add\" ? \"Add a new blog post\" : blogOption === \"edit\" ?\n                    \"Change blog details\" : \"Delete blog\"}\n                </DialogTitle>\n                {blogOption === \"delete\" ?\n                    <div>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                Are you sure you want to delete this blog?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                No\n                            </Button>\n                            <Button onClick={handleDeleteBlog} color=\"primary\" autoFocus>\n                                Yes\n                            </Button>\n                        </DialogActions>\n                    </div>\n                    :\n                    blogOption === \"add\" || blogOption === \"edit\" ?\n                        <div>\n                            <form className={classes.formControl} noValidate autoComplete=\"off\">\n                                <div>\n                                    <TextField id=\"standard-required\" label=\"Topic\"\n                                               name={\"topic\"}\n                                               value={blogObject.topic}\n                                               onChange={handleChangeBlogDetails}/>\n\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Choose markdown for\n                                        content</InputLabel>\n                                    <input type={\"file\"} accept=\".md\" name={\"content\"} className={classes.link}\n                                           onChange={handleContent}/>\n\n                                    <InputLabel style={{paddingTop: 5}}>Choose image for thumbnail</InputLabel>\n                                    <input type={\"file\"} accept=\"image/*\" name={\"imageFile\"} className={classes.link}\n                                           onChange={handleImageUpload}/>\n                                    {/*display  default image button only when blog is edited*/}\n                                    {blogOption === \"edit\" ?\n                                        <Button color=\"primary\"\n                                                onClick={() => handleDefaultImage(blogObject[\"_id\"], \"false\")}>\n                                            Upload the default image\n                                        </Button>\n                                        : null\n                                    }\n                                </div>\n                                <Button color=\"primary\" variant=\"outlined\" className={classes.link}\n                                        onClick={() => handleSaveBlog(blogOption)}\n                                        disabled={blogObject.topic.length < 1}>\n                                    save this blog\n                                </Button>\n                            </form>\n                            {/*Display appropriate message for add, edit, delete blog*/}\n                            <Typography align=\"center\" gutterBottom color={\"secondary\"}>\n                                {message}\n                            </Typography>\n                        </div>\n                        : null\n\n                }\n\n                </Dialog>\n\n            {/*display all blogs */}\n                <Grid container spacing={4}>\n                {blogs.map((blog, index, array) => (\n                    <Grid item key={`grid${blog.topic}${index}`} xs={12} sm={6} md={4}>\n                        <Card className={classes.card} key={`card${blog.topic}${index}`}>\n                            <CardHeader\n                                key={`cardHeader${blog.topic}${index}`}\n                                title={blog.topic}\n                                subheader={new Date(blog.updatedAt).toLocaleDateString()}\n                                action={props.isAdmin ?\n                                        <div>\n                                            <Button size=\"small\" color=\"primary\" onClick={() => handleOpen(\"edit\", blog)}>\n                                                edit\n                                            </Button>\n                                            <Button size=\"small\" color=\"primary\" onClick={() => handleOpen(\"delete\", blog)}>\n                                                delete\n                                            </Button>\n                                        </div>\n                                        :\n                                        null\n                                }\n                            />\n                            <CardMedia\n                                key={`cardMedia${blog.topic}${index}`}\n                                className={classes.cardMedia}\n                                image={\n                                    blog.image ?\n                                        `http://www.sandhyasankaran.com/static/media/blog${blog[\"_id\"]}.jpg` :\n                                    require(`../images/default.jpg`)}\n                                title=\"Image title\"\n                            />\n                            <CardContent className={classes.cardContent}>\n                                {blog.content !== undefined ?\n                                    <Typography>\n                                        {blog.content.slice(0, 25)}\n                                    </Typography>\n                                    :\n                                    null}\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"large\" color=\"primary\" onClick={() => viewArticle(blog)}>\n                                    view\n                                </Button>\n                                    {/*display total comments count fpr each blog*/}\n                                    {`${blog.comments.length} comments  `}\n                                    <MoreHorizRoundedIcon color={\"secondary\"} size={\"large\"}/>\n\n                                {/*display total likes count for each blog and like button to like or unlike*/}\n                                {blog.likes.length}\n                                    <ThumbUpAltIcon onClick={() => handleLike(blog)}\n                                                    color={blog.likes.includes(props.user.googleId ) ? 'primary' :\n                                                        'inherit'}/>\n\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n\n                </Grid>\n                </div>\n            }\n\n        </Container>\n    );\n};\n\nBlog.propTypes ={\n    isAdmin: PropTypes.bool,\n    user:PropTypes.object\n\n};\n\nexport default Blog;","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Contact =(props) =>{\n    const classes = useStyles();\n\n    //states\n    const [open , setOpen] = useState(false);\n    const [message,setMessage] = useState({fromEmail:\"\",content:\"\",website:\"\",name:\"\"});\n    const [confirmation,setConfirmation] = useState(\"\");\n\n    //functions\n    const handleClickOpen = () => {\n        fetch('/contact',  {\n            method: 'POST',\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({message:message})\n        }).then( (response)=> {\n            response.json().then((data) => {\n                console.log(data);\n                if(data.success){\n                    setConfirmation(data.message);\n                    setOpen(true);\n\n                }\n            });\n        })\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setMessage({fromEmail:\"\",content:\"\",website:\"\",name:\"\"})\n    };\n\n    const handleChange =(event) =>{\n        setMessage({ ...message,[event.target.name]:event.target.value});\n    }\n    return( <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n            {/*Display confirmation dialog*/}\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Email Confirmation\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {confirmation}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {/*end of confirmation dialog*/}\n\n\n            {/*Display the form*/}\n            <Avatar className={classes.avatar}>\n                <ContactMailIcon />\n            </Avatar>\n            <form className={classes.form} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                    value={message.name}\n                    onChange={handleChange}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    error={message.fromEmail.length <1}\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"fromEmail\"\n                    autoComplete=\"email\"\n                    value={message.fromEmail}\n                    onChange={handleChange}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"website\"\n                    label=\"Website\"\n                    id=\"website\"\n                    autoComplete=\"website\"\n                    value={message.website}\n                    onChange={handleChange}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    required\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"content\"\n                    label=\"Message\"\n                    id=\"message\"\n                    autoComplete=\"message\"\n                    multiline\n                    rows={2}\n                    rowsMax={4}\n                    value={message.content}\n                    onChange={handleChange}\n                />\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={handleClickOpen}\n                    disabled={message.fromEmail.length <1}\n                >\n                    Send\n                </Button>\n            </form>\n        </div>\n    </Container>\n    );\n}\n\nexport default Contact","//Main App file\nimport React, {useState, useCallback} from 'react';\nimport MenuItems from './components/MenuItems'\nimport FooterDisplay from './components/FooterDisplay'\nimport Banner from './components/Banner'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Home from './components/Home'\nimport {makeStyles} from \"@material-ui/core\";\nimport Blog from \"./components/Blog\";\nimport Work from \"./components/Work\";\nimport Contact from \"./components/Contact\";\nimport Container from \"@material-ui/core/Container\";\n\n\n//Material UI styles\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n}));\n\n\n const App = () => {\n     const classes = useStyles();\n     //state\n    const [title, setTitle] = useState(\"Sandhya Sankaran\");\n    const[isAdmin,setAdmin] = useState(false);\n    const [user,setUser] = useState(null);\n     const [activeLink,setActiveLink] = useState(\"home\");\n\n     //functions\n     // similar to componentDidMount and componentDidUpdate\n\n\n    //function to set title ad active link from menuItems component\n    const handleNavItemClick = useCallback(\n        (event) => {\n            console.log(\"menu clicked\" ,event.target.name );\n            setTitle(event.target.name);\n            setActiveLink(event.target.name);\n        },\n        []\n    );\n\n     //function to set admin from menuItems component\n     const handleUser = useCallback(\n         (boolean,user) => {\n             //console.log(\"menu clicked\" ,event.target.name );\n             setAdmin(boolean);\n             setUser(user);\n         },\n         []\n     );\n\n   // Render component\n    return(\n        <div>\n            <CssBaseline />\n            {/*The menu nav header display*/}\n            <MenuItems handleNavItemClick={handleNavItemClick} isAdmin={isAdmin} activeLink={activeLink} user={user}\n                        handleUser={handleUser}/>\n            <div className={classes.root}>\n                {/*The banner display -title and tagline with photo*/}\n                <Banner title={title} isAdmin={isAdmin} user={user}/>\n                <Container component=\"main\" className={classes.main} maxWidth=\"md\">\n                            {\n                                title === \"home\" || title === \"Sandhya Sankaran\" ? <Home isAdmin={isAdmin} user={user}/> :\n                                    title === \"work\" ? <Work isAdmin={isAdmin} user={user}/> :\n                                        title === \"contact\" ? <Contact isAdmin={isAdmin}/> :\n                                            <Blog isAdmin={isAdmin} user={user}/>\n                            }\n                </Container>\n            </div>\n            <FooterDisplay isAdmin={isAdmin} user={user}/>\n        </div>\n    );\n};\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}